version: 2.1

orbs:
  aws-eks: circleci/aws-eks@2.2.0
  kubernetes: circleci/kubernetes@1.3

aliases:
  - &node-base-image
    - image: circleci/node:13.8.0
  - &python-image
    - image: python:3.7.3-stretch
  - &docker-image
    - image: docker:17.05.0-ce-git

commands:
  print_pipeline_id:
    steps:
      - run:
          name: Print workflow ID
          # ${CIRCLE_WORKFLOW_ID:0:7} takes the first 7 chars of a Built-in environment variable
          command:
            echo ${CIRCLE_WORKFLOW_ID:0:7}

jobs:
  check-code-standard:
    docker: *python-image
    working_directory: ~/repo
    steps:
      - print_pipeline_id
      - checkout
      - run:
          name: Install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 && chmod +x /bin/hadolint
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
      - run:
          name: Run lint
          command: |
            . venv/bin/activate
            make lint
  create-docker-image:
    docker: *node-base-image
    working_directory: ~/repo
    steps:
      - print_pipeline_id
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            - v1-dependencies-
      - setup_remote_docker:
          version: 20.10.14
          docker_layer_caching: false
      - run:
          name: Install dependencies
          command: |
            sudo apt install -y curl
      - run:
          name: Create docker image
          command: |
            docker build -t ml-traning-${CIRCLE_WORKFLOW_ID:0:7} .
            docker tag ml-traning-${CIRCLE_WORKFLOW_ID:0:7} ${DOCKERHUB_REPO}/ml-traning:${CIRCLE_WORKFLOW_ID:0:7}
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push ${DOCKERHUB_REPO}/ml-traning:${CIRCLE_WORKFLOW_ID:0:7}
 
  create-deployment:
    docker:
      - image: 'cimg/base:stable'
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            sudo apt-get update
            sudo apt-get install -y curl unzip
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
      - run:
          name: set-credential
          command: |
            aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
            aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
            aws configure set aws_session_token $AWS_SESSION_TOKEN
            aws configure set region $AWS_DEFAULT_REGION
      - kubernetes/install-kubectl
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: aws-devops
          install-kubectl: true
      # - kubernetes/create-or-update-resource:
      #     resource-file-path: eks/deployment.yaml
      #     show-kubectl-command: true
      #     resource-name: deployment/ml-training-deployment
workflows:
  default:
    jobs:
      - check-code-standard
      - create-docker-image:
          requires:
            - check-code-standard
      - create-deployment:
          requires:
            - create-docker-image
      - aws-eks/update-container-image:
          cluster-name: aws-devops
          container-image-updates: 'ml-training=ml-training:${CIRCLE_WORKFLOW_ID:0:7}'
          resource-name: deployment/ml-training-deployment
          requires:
            - create-deployment
